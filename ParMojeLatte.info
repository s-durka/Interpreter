-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParMojeLatte.y
-----------------------------------------------------------------------------

state 71 contains 7 shift/reduce conflicts.

rule 33 is unused
rule 34 is unused
rule 35 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef 'main' Block                 (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Block -> '[' ListDecl ']' '{' Stmt '}'             (12)
	Decl -> Type Item                                  (13)
	Item -> Ident                                      (14)
	Item -> Ident '=' Expr                             (15)
	Item -> Ident '[' Expr ']'                         (16)
	ListDecl -> Decl                                   (17)
	ListDecl -> Decl ';' ListDecl                      (18)
	Stmt -> Stmt Stmt                                  (19)
	Stmt -> ';'                                        (20)
	Stmt -> Block                                      (21)
	Stmt -> LValue '=' Expr ';'                        (22)
	Stmt -> LValue '++' ';'                            (23)
	Stmt -> LValue '--' ';'                            (24)
	Stmt -> 'return' Expr ';'                          (25)
	Stmt -> 'if' '(' Expr ')' Block                    (26)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (27)
	Stmt -> 'while' '(' Expr ')' Block                 (28)
	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' Block   (29)
	Type -> 'int'                                      (30)
	Type -> 'string'                                   (31)
	Type -> 'boolean'                                  (32)
	ListType ->                                        (33)
	ListType -> Type                                   (34)
	ListType -> Type ',' ListType                      (35)
	LValue -> Ident                                    (36)
	LValue -> Ident '[' Expr ']'                       (37)
	Expr6 -> LValue                                    (38)
	Expr6 -> Integer                                   (39)
	Expr6 -> 'true'                                    (40)
	Expr6 -> 'false'                                   (41)
	Expr6 -> Ident '(' ListExpr ')'                    (42)
	Expr6 -> String                                    (43)
	Expr6 -> Expr7                                     (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> '!' Expr6                                 (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 MulOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 AddOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr2 RelOp Expr3                         (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 '&&' Expr1                          (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 '||' Expr                            (56)
	Expr -> Expr1                                      (57)
	Expr7 -> '(' Expr ')'                              (58)
	ListExpr ->                                        (59)
	ListExpr -> Expr                                   (60)
	ListExpr -> Expr ',' ListExpr                      (61)
	AddOp -> '+'                                       (62)
	AddOp -> '-'                                       (63)
	MulOp -> '*'                                       (64)
	MulOp -> '/'                                       (65)
	MulOp -> '%'                                       (66)
	RelOp -> '<'                                       (67)
	RelOp -> '<='                                      (68)
	RelOp -> '>'                                       (69)
	RelOp -> '>='                                      (70)
	RelOp -> '=='                                      (71)
	RelOp -> '!='                                      (72)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'['            { PT _ (TS _ 21) }
	']'            { PT _ (TS _ 22) }
	'boolean'      { PT _ (TS _ 23) }
	'else'         { PT _ (TS _ 24) }
	'false'        { PT _ (TS _ 25) }
	'for'          { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'in'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'main'         { PT _ (TS _ 30) }
	'range'        { PT _ (TS _ 31) }
	'return'       { PT _ (TS _ 32) }
	'string'       { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'while'        { PT _ (TS _ 35) }
	'{'            { PT _ (TS _ 36) }
	'||'           { PT _ (TS _ 37) }
	'}'            { PT _ (TS _ 38) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rule  8
	ListArg         rules 9, 10, 11
	Block           rule  12
	Decl            rule  13
	Item            rules 14, 15, 16
	ListDecl        rules 17, 18
	Stmt            rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Type            rules 30, 31, 32
	ListType        rules 33, 34, 35
	LValue          rules 36, 37
	Expr6           rules 38, 39, 40, 41, 42, 43, 44
	Expr5           rules 45, 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57
	Expr7           rule  58
	ListExpr        rules 59, 60, 61
	AddOp           rules 62, 63
	MulOp           rules 64, 65, 66
	RelOp           rules 67, 68, 69, 70, 71, 72

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'in'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'main'         reduce using rule 6
	'string'       shift, and enter state 9

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef . 'main' Block                (rule 4)

	'main'         shift, and enter state 11


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 7

	Type -> 'boolean' .                                 (rule 32)

	L_Ident        reduce using rule 32


State 8

	Type -> 'int' .                                     (rule 30)

	L_Ident        reduce using rule 30


State 9

	Type -> 'string' .                                  (rule 31)

	L_Ident        reduce using rule 31


State 10

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 15


State 11

	Program -> ListTopDef 'main' . Block                (rule 4)

	'['            shift, and enter state 14

	Block          goto state 13

State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	'main'         reduce using rule 7


State 13

	Program -> ListTopDef 'main' Block .                (rule 4)

	%eof           reduce using rule 4


State 14

	Block -> '[' . ListDecl ']' '{' Stmt '}'            (rule 12)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Decl           goto state 19
	ListDecl       goto state 20
	Type           goto state 21

State 15

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 16
	ListArg        goto state 17
	Type           goto state 18

State 16

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 28


State 17

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 27


State 18

	Arg -> Type . Ident                                 (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 26

State 19

	ListDecl -> Decl .                                  (rule 17)
	ListDecl -> Decl . ';' ListDecl                     (rule 18)

	';'            shift, and enter state 25
	']'            reduce using rule 17


State 20

	Block -> '[' ListDecl . ']' '{' Stmt '}'            (rule 12)

	']'            shift, and enter state 24


State 21

	Decl -> Type . Item                                 (rule 13)

	L_Ident        shift, and enter state 2

	Ident          goto state 22
	Item           goto state 23

State 22

	Item -> Ident .                                     (rule 14)
	Item -> Ident . '=' Expr                            (rule 15)
	Item -> Ident . '[' Expr ']'                        (rule 16)

	';'            reduce using rule 14
	'='            shift, and enter state 33
	'['            shift, and enter state 34
	']'            reduce using rule 14


State 23

	Decl -> Type Item .                                 (rule 13)

	';'            reduce using rule 13
	']'            reduce using rule 13


State 24

	Block -> '[' ListDecl ']' . '{' Stmt '}'            (rule 12)

	'{'            shift, and enter state 32


State 25

	ListDecl -> Decl ';' . ListDecl                     (rule 18)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Decl           goto state 19
	ListDecl       goto state 31
	Type           goto state 21

State 26

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 27

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'['            shift, and enter state 14

	Block          goto state 30

State 28

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Arg            goto state 16
	ListArg        goto state 29
	Type           goto state 18

State 29

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 30

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'main'         reduce using rule 5
	'string'       reduce using rule 5


State 31

	ListDecl -> Decl ';' ListDecl .                     (rule 18)

	']'            reduce using rule 18


State 32

	Block -> '[' ListDecl ']' '{' . Stmt '}'            (rule 12)

	';'            shift, and enter state 59
	'['            shift, and enter state 14
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'return'       shift, and enter state 62
	'while'        shift, and enter state 63
	L_Ident        shift, and enter state 2

	Ident          goto state 55
	Block          goto state 56
	Stmt           goto state 57
	LValue         goto state 58

State 33

	Item -> Ident '=' . Expr                            (rule 15)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 54
	Expr7          goto state 46

State 34

	Item -> Ident '[' . Expr ']'                        (rule 16)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 45
	Expr7          goto state 46

State 35

	LValue -> Ident .                                   (rule 36)
	LValue -> Ident . '[' Expr ']'                      (rule 37)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	'('            shift, and enter state 94
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'['            shift, and enter state 73
	']'            reduce using rule 36
	'||'           reduce using rule 36


State 36

	Expr6 -> Integer .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39


State 37

	Expr6 -> String .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43


State 38

	Expr6 -> LValue .                                   (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	']'            reduce using rule 38
	'||'           reduce using rule 38


State 39

	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 40

	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 41

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 91
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 92
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 93
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 90

State 42

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 88
	','            reduce using rule 53
	'-'            shift, and enter state 89
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 87

State 43

	Expr2 -> Expr2 . RelOp Expr3                        (rule 52)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 80
	'&&'           shift, and enter state 81
	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	']'            reduce using rule 55
	'||'           reduce using rule 55

	RelOp          goto state 79

State 44

	Expr -> Expr1 . '||' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	']'            reduce using rule 57
	'||'           shift, and enter state 78


State 45

	Item -> Ident '[' Expr . ']'                        (rule 16)

	']'            shift, and enter state 77


State 46

	Expr6 -> Expr7 .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44


State 47

	Expr5 -> '!' . Expr6                                (rule 46)

	'('            shift, and enter state 48
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 76
	Expr7          goto state 46

State 48

	Expr7 -> '(' . Expr ')'                             (rule 58)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 75
	Expr7          goto state 46

State 49

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 48
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 74
	Expr7          goto state 46

State 50

	Expr6 -> 'false' .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41


State 51

	Expr6 -> 'true' .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40


State 52

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 53

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 54

	Item -> Ident '=' Expr .                            (rule 15)

	';'            reduce using rule 15
	']'            reduce using rule 15


State 55

	LValue -> Ident .                                   (rule 36)
	LValue -> Ident . '[' Expr ']'                      (rule 37)

	'++'           reduce using rule 36
	'--'           reduce using rule 36
	'='            reduce using rule 36
	'['            shift, and enter state 73


State 56

	Stmt -> Block .                                     (rule 21)

	';'            reduce using rule 21
	'['            reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'return'       reduce using rule 21
	'while'        reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21


State 57

	Block -> '[' ListDecl ']' '{' Stmt . '}'            (rule 12)
	Stmt -> Stmt . Stmt                                 (rule 19)

	';'            shift, and enter state 59
	'['            shift, and enter state 14
	'for'          shift, and enter state 60
	'if'           shift, and enter state 61
	'return'       shift, and enter state 62
	'while'        shift, and enter state 63
	'}'            shift, and enter state 72
	L_Ident        shift, and enter state 2

	Ident          goto state 55
	Block          goto state 56
	Stmt           goto state 71
	LValue         goto state 58

State 58

	Stmt -> LValue . '=' Expr ';'                       (rule 22)
	Stmt -> LValue . '++' ';'                           (rule 23)
	Stmt -> LValue . '--' ';'                           (rule 24)

	'++'           shift, and enter state 68
	'--'           shift, and enter state 69
	'='            shift, and enter state 70


State 59

	Stmt -> ';' .                                       (rule 20)

	';'            reduce using rule 20
	'['            reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'return'       reduce using rule 20
	'while'        reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20


State 60

	Stmt -> 'for' . Ident 'in' 'range' '(' Expr ')' Block    (rule 29)

	L_Ident        shift, and enter state 2

	Ident          goto state 67

State 61

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 26)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 27)

	'('            shift, and enter state 66


State 62

	Stmt -> 'return' . Expr ';'                         (rule 25)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 65
	Expr7          goto state 46

State 63

	Stmt -> 'while' . '(' Expr ')' Block                (rule 28)

	'('            shift, and enter state 64


State 64

	Stmt -> 'while' '(' . Expr ')' Block                (rule 28)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 110
	Expr7          goto state 46

State 65

	Stmt -> 'return' Expr . ';'                         (rule 25)

	';'            shift, and enter state 109


State 66

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 26)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 27)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 108
	Expr7          goto state 46

State 67

	Stmt -> 'for' Ident . 'in' 'range' '(' Expr ')' Block    (rule 29)

	'in'           shift, and enter state 107


State 68

	Stmt -> LValue '++' . ';'                           (rule 23)

	';'            shift, and enter state 106


State 69

	Stmt -> LValue '--' . ';'                           (rule 24)

	';'            shift, and enter state 105


State 70

	Stmt -> LValue '=' . Expr ';'                       (rule 22)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 104
	Expr7          goto state 46

State 71

	Stmt -> Stmt . Stmt                                 (rule 19)
	Stmt -> Stmt Stmt .                                 (rule 19)

	';'            shift, and enter state 59
			(reduce using rule 19)

	'['            shift, and enter state 14
			(reduce using rule 19)

	'for'          shift, and enter state 60
			(reduce using rule 19)

	'if'           shift, and enter state 61
			(reduce using rule 19)

	'return'       shift, and enter state 62
			(reduce using rule 19)

	'while'        shift, and enter state 63
			(reduce using rule 19)

	'}'            reduce using rule 19
	L_Ident        shift, and enter state 2
			(reduce using rule 19)


	Ident          goto state 55
	Block          goto state 56
	Stmt           goto state 71
	LValue         goto state 58

State 72

	Block -> '[' ListDecl ']' '{' Stmt '}' .            (rule 12)

	';'            reduce using rule 12
	'['            reduce using rule 12
	'boolean'      reduce using rule 12
	'else'         reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'main'         reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'while'        reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	%eof           reduce using rule 12


State 73

	LValue -> Ident '[' . Expr ']'                      (rule 37)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 103
	Expr7          goto state 46

State 74

	Expr5 -> '-' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45


State 75

	Expr7 -> '(' Expr . ')'                             (rule 58)

	')'            shift, and enter state 102


State 76

	Expr5 -> '!' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	']'            reduce using rule 46
	'||'           reduce using rule 46


State 77

	Item -> Ident '[' Expr ']' .                        (rule 16)

	';'            reduce using rule 16
	']'            reduce using rule 16


State 78

	Expr -> Expr1 '||' . Expr                           (rule 56)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 101
	Expr7          goto state 46

State 79

	Expr2 -> Expr2 RelOp . Expr3                        (rule 52)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 100
	Expr7          goto state 46

State 80

	RelOp -> '!=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 81

	Expr1 -> Expr2 '&&' . Expr1                         (rule 54)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 99
	Expr7          goto state 46

State 82

	RelOp -> '<' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 83

	RelOp -> '<=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 84

	RelOp -> '==' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 85

	RelOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 86

	RelOp -> '>=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 87

	Expr3 -> Expr3 AddOp . Expr4                        (rule 50)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 98
	Expr7          goto state 46

State 88

	AddOp -> '+' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 89

	AddOp -> '-' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 90

	Expr4 -> Expr4 MulOp . Expr5                        (rule 48)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 97
	Expr7          goto state 46

State 91

	MulOp -> '%' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 92

	MulOp -> '*' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 93

	MulOp -> '/' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 94

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 42)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	')'            reduce using rule 59
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 95
	Expr7          goto state 46
	ListExpr       goto state 96

State 95

	ListExpr -> Expr .                                  (rule 60)
	ListExpr -> Expr . ',' ListExpr                     (rule 61)

	')'            reduce using rule 60
	','            shift, and enter state 117


State 96

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 42)

	')'            shift, and enter state 116


State 97

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 98

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 91
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 92
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 93
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50

	MulOp          goto state 90

State 99

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 100

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 88
	','            reduce using rule 52
	'-'            shift, and enter state 89
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 87

State 101

	Expr -> Expr1 '||' Expr .                           (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	']'            reduce using rule 56


State 102

	Expr7 -> '(' Expr ')' .                             (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 103

	LValue -> Ident '[' Expr . ']'                      (rule 37)

	']'            shift, and enter state 115


State 104

	Stmt -> LValue '=' Expr . ';'                       (rule 22)

	';'            shift, and enter state 114


State 105

	Stmt -> LValue '--' ';' .                           (rule 24)

	';'            reduce using rule 24
	'['            reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'return'       reduce using rule 24
	'while'        reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24


State 106

	Stmt -> LValue '++' ';' .                           (rule 23)

	';'            reduce using rule 23
	'['            reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'return'       reduce using rule 23
	'while'        reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23


State 107

	Stmt -> 'for' Ident 'in' . 'range' '(' Expr ')' Block    (rule 29)

	'range'        shift, and enter state 113


State 108

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 26)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 27)

	')'            shift, and enter state 112


State 109

	Stmt -> 'return' Expr ';' .                         (rule 25)

	';'            reduce using rule 25
	'['            reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'return'       reduce using rule 25
	'while'        reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25


State 110

	Stmt -> 'while' '(' Expr . ')' Block                (rule 28)

	')'            shift, and enter state 111


State 111

	Stmt -> 'while' '(' Expr ')' . Block                (rule 28)

	'['            shift, and enter state 14

	Block          goto state 121

State 112

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 26)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 27)

	'['            shift, and enter state 14

	Block          goto state 120

State 113

	Stmt -> 'for' Ident 'in' 'range' . '(' Expr ')' Block    (rule 29)

	'('            shift, and enter state 119


State 114

	Stmt -> LValue '=' Expr ';' .                       (rule 22)

	';'            reduce using rule 22
	'['            reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'while'        reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22


State 115

	LValue -> Ident '[' Expr ']' .                      (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	'++'           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'--'           reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	']'            reduce using rule 37
	'||'           reduce using rule 37


State 116

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42


State 117

	ListExpr -> Expr ',' . ListExpr                     (rule 61)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	')'            reduce using rule 59
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 95
	Expr7          goto state 46
	ListExpr       goto state 118

State 118

	ListExpr -> Expr ',' ListExpr .                     (rule 61)

	')'            reduce using rule 61


State 119

	Stmt -> 'for' Ident 'in' 'range' '(' . Expr ')' Block    (rule 29)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 50
	'true'         shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 35
	Integer        goto state 36
	String         goto state 37
	LValue         goto state 38
	Expr6          goto state 39
	Expr5          goto state 40
	Expr4          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 123
	Expr7          goto state 46

State 120

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 26)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 27)

	';'            reduce using rule 26
	'['            reduce using rule 26
	'else'         shift, and enter state 122
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'return'       reduce using rule 26
	'while'        reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26


State 121

	Stmt -> 'while' '(' Expr ')' Block .                (rule 28)

	';'            reduce using rule 28
	'['            reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'return'       reduce using rule 28
	'while'        reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28


State 122

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 27)

	'['            shift, and enter state 14

	Block          goto state 125

State 123

	Stmt -> 'for' Ident 'in' 'range' '(' Expr . ')' Block    (rule 29)

	')'            shift, and enter state 124


State 124

	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' . Block    (rule 29)

	'['            shift, and enter state 14

	Block          goto state 126

State 125

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 27)

	';'            reduce using rule 27
	'['            reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'return'       reduce using rule 27
	'while'        reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27


State 126

	Stmt -> 'for' Ident 'in' 'range' '(' Expr ')' Block .    (rule 29)

	';'            reduce using rule 29
	'['            reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'return'       reduce using rule 29
	'while'        reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 73
Number of terminals: 41
Number of non-terminals: 29
Number of states: 127
